# Project Euler
# Even Fibonnaci numbers
# Problem 2

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""
import time
start_time = time.time()

from sys import argv

# Replace.py extension with -answer.txt
script = argv
answer_txt = script.pop(0)
answer_txt = answer_txt.replace('.py','-answer.txt')

fibonnaci_a, fibonnaci_b = 1, 2
even_sum = 2

while fibonnaci_b < 4000000:

    fibonnaci_a, fibonnaci_b = fibonnaci_b, fibonnaci_a + fibonnaci_b

    if fibonnaci_b % 2 == 0:
        even_sum += fibonnaci_b

print ("The answer is %d" % even_sum)

with open(answer_txt, 'w') as txt:
    txt.write("The answer is " + str(even_sum ) + "\nElapsed Time " + str(time.time() - start_time) + " seconds\n")
